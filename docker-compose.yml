version: '3'

services:

  producer:
    container_name: 'producer'
    build:
      context: ./
      dockerfile: producer/Dockerfile
    volumes:
      - ./producer:/src
    ports:
      - "${PRODUCER_PORT}:${PRODUCER_PORT}"
    networks:
      - app-network
    environment:
      - URL_RABBIT=amqp://rabbitmq
      - NODE_ENV=${NODE_ENV}
      - PORT_EXPRESS=${PRODUCER_PORT}
    depends_on:
      - rabbitmq

  consumer:
    container_name: 'consumer'
    build:
      context: ./
      dockerfile: consumer/Dockerfile
    volumes:
      - ./consumer:/src
      - ./consumer/logs:/src/logs
    networks:
      - app-network
    environment:
      - URL_RABBIT=amqp://rabbitmq
      - NODE_ENV=${NODE_ENV}
      - PATH_LOGS_SUCCESS=${PATH_LOGS_SUCCESS}
      - PATH_LOGS_ERROR=${PATH_LOGS_ERROR}
    depends_on:
      - rabbitmq
      - producer

  service:
    container_name: 'service'
    build:
      context: ./
      dockerfile: service/Dockerfile
    volumes:
      - ./service:/src
    networks:
      - app-network
    environment:
      - URL_RABBIT=amqp://rabbitmq
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - rabbitmq
      - producer

  rabbitmq:
    container_name: 'rabbitmq'
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    labels:
      NAME: "rabbitmq"
    ports:
      - "${RABBITMQ_PORT1}:${RABBITMQ_PORT1}"
      - "${RABBITMQ_PORT2}:${RABBITMQ_PORT2}"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge